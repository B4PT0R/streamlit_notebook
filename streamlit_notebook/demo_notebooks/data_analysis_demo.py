# Generated by Streamlit Notebook
# Original notebook: data_analysis_demo
# This file can be run directly with: streamlit run <filename>

from streamlit_notebook import get_notebook, render_notebook
import streamlit as st

st.set_page_config(page_title="st.notebook", layout="centered", initial_sidebar_state="collapsed")

nb = get_notebook(title='data_analysis_demo')

@nb.cell(type='markdown', auto_rerun=True, fragment=False)
def cell_0():
    r'''
    # Interactive Data Analysis
    This notebook demonstrates how to combine pandas analysis with Streamlit widgets for interactive data exploration.
    '''

@nb.cell(type='code', auto_rerun=False, fragment=False)
def cell_1():
    import pandas as pd
    import numpy as np
    import seaborn as sns
    import matplotlib.pyplot as plt

    # Generate sample data
    np.random.seed(42)
    df = pd.DataFrame({
        'category': np.random.choice(['A', 'B', 'C'], 1000),
        'value': np.random.normal(100, 15, 1000),
        'group': np.random.choice(['Group 1', 'Group 2'], 1000)
    })

@nb.cell(type='code', auto_rerun=True, fragment=False)
def cell_2():
    # Interactive filters
    selected_category = st.selectbox('Select Category', ['All'] + list(df['category'].unique()))
    selected_group = st.selectbox('Select Group', ['All'] + list(df['group'].unique()))

    # Filter data
    filtered_df = df.copy()
    if selected_category != 'All':
        filtered_df = filtered_df[filtered_df['category'] == selected_category]
    if selected_group != 'All':
        filtered_df = filtered_df[filtered_df['group'] == selected_group]

@nb.cell(type='code', auto_rerun=True, fragment=False)
def cell_3():
    # Display statistics
    st.write('### Summary Statistics')
    st.write(filtered_df.describe())

    # Create visualization
    plt.figure(figsize=(10, 6))
    sns.boxplot(data=filtered_df, x='category', y='value', hue='group')
    st.pyplot(plt.gcf());

# Render the notebook
# Using render_notebook() instead of nb.render() allows the notebook
# to be replaced dynamically (e.g., when loading a different file)
render_notebook()