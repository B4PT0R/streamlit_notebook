{"title": "data_analysis_demo", "hide_code_cells": true, "display_mode": "last", "show_logo": true, "run_on_submit": true, "cells": {"0": {"key": 0, "type": "markdown", "code": "# Interactive Data Analysis\nThis notebook demonstrates how to combine pandas analysis with Streamlit widgets for interactive data exploration.", "auto_rerun": true, "fragment": false}, "1": {"key": 1, "type": "code", "code": "import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Generate sample data\nnp.random.seed(42)\ndf = pd.DataFrame({\n    'category': np.random.choice(['A', 'B', 'C'], 1000),\n    'value': np.random.normal(100, 15, 1000),\n    'group': np.random.choice(['Group 1', 'Group 2'], 1000)\n})", "auto_rerun": false, "fragment": false}, "2": {"key": 2, "type": "code", "code": "# Interactive filters\nselected_category = st.selectbox('Select Category', ['All'] + list(df['category'].unique()))\nselected_group = st.selectbox('Select Group', ['All'] + list(df['group'].unique()))\n\n# Filter data\nfiltered_df = df.copy()\nif selected_category != 'All':\n    filtered_df = filtered_df[filtered_df['category'] == selected_category]\nif selected_group != 'All':\n    filtered_df = filtered_df[filtered_df['group'] == selected_group]", "auto_rerun": true, "fragment": false}, "3": {"key": 3, "type": "code", "code": "# Display statistics\nst.write('### Summary Statistics')\nst.write(filtered_df.describe())\n\n# Create visualization\nplt.figure(figsize=(10, 6))\nsns.boxplot(data=filtered_df, x='category', y='value', hue='group')\nst.pyplot(plt.gcf());", "auto_rerun": true, "fragment": false}}}